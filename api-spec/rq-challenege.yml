openapi: 3.0.0
info:
  title: RQ Challenge API
  description: RQ Challenge API
  version: 0.0.1

paths:
  /employees:
    get:
      summary: Get all employees
      operationId: getAllEmployees
      tags:
        - employee
      responses:
        '200':
          description: List of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/employee"
        '400':
          $ref: '#/components/responses/api_error_response'
        '500':
          $ref: '#/components/responses/api_error_response'
    post:
      summary: Create new employee
      operationId: createEmployee
      tags:
        - employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/employee"
      responses:
        '200':
          description: Created employee details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/employee"
        '400':
          $ref: '#/components/responses/api_error_response'
        '500':
          $ref: '#/components/responses/api_error_response'

  /employees/{id}:
    get:
      summary: Get employee by id
      operationId: getEmployeeById
      tags:
        - employee
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        '200':
          description: Employee details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/employee"
        '400':
          $ref: '#/components/responses/api_error_response'
        '500':
          $ref: '#/components/responses/api_error_response'

    delete:
      summary: Delete employee by id
      operationId: deleteEmployeeById
      tags:
        - employee
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/api_error_response'
        '500':
          $ref: '#/components/responses/api_error_response'

  /employees/search/{search_string}:
    get:
      summary: Get all employees whose name contains or matches the string input provided
      operationId: getEmployeesByNameSearch
      tags:
        - employee
      parameters:
        - $ref: "#/components/parameters/search_string"
      responses:
        '200':
          description: List of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/employee"
        '400':
          $ref: '#/components/responses/api_error_response'
        '500':
          $ref: '#/components/responses/api_error_response'

  /employees/highest_salary:
    get:
      summary: Get a single integer indicating the highest salary of all employees
      operationId: getHighestSalaryOfEmployees
      tags:
        - employee
      responses:
        '200':
          description: Highest salary
          content:
            text/plain:
              schema:
                type: integer
                format: int64
        '400':
          $ref: '#/components/responses/api_error_response'
        '500':
          $ref: '#/components/responses/api_error_response'

  /employees/top_ten_highest_earning_employees:
    get:
      summary: Get a list of the top 10 employees based off of their salaries
      operationId: getTopTenHighestEarningEmployees
      tags:
        - employee
      responses:
        '200':
          description: List of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/employee"
        '400':
          $ref: '#/components/responses/api_error_response'
        '500':
          $ref: '#/components/responses/api_error_response'

components:
  parameters:
    id:
      in: path
      name: id
      schema:
        type: integer
        format: int64
      required: true
      description: Id
    search_string:
      in: path
      name: search_string
      schema:
        type: string
      required: true
      description: Search string

  schemas:
    employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
        employee_name:
          type: string
        employee_salary:
          type: integer
          format: int64
        employee_age:
          type: integer
        profile_image:
          type: string

    api_error_response:
      type: object
      properties:
        message:
          type: string
        error_code:
          type: string

  responses:
    api_error_response:
      description: error response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/api_error_response"
